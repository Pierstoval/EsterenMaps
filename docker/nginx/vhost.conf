# This is extracted from docs/vhosts.md documentation file.
# It has been adapted to docker stack.
server {
    listen 80;

    # Change domain names if needed
    server_name
               esteren.docker
           api.esteren.docker
          maps.esteren.docker
           www.esteren.docker
          back.esteren.docker
         games.esteren.docker
      www.studio-agate.docker
    stats.studio-agate.docker
       www.vermine2047.docker
       www.dragons-rpg.docker
             fateforge.docker
          totem-system.docker
    ;

    root /srv/public/;

    # restrict access to hidden files, just in case
    location ~ /\. {
        deny all;
    }

    # Avoids getting 404 errors for missing map tiles.
    location ~ ^/maps_tiles {
        try_files $uri @rewritemaptiles;
    }

    # Rewrite all to index.php
    location @rewritemaptiles {
        rewrite ^(.*)$ /maps_tiles/empty.jpg last;
    }

    # Caches assets
    # You can disable this in development if you encounter cache issues with assets.
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|eot|ttf|woff2?|svg) {
        if ($args ~ "assetv=")  {
            expires 1y;
            access_log off;
            add_header Cache-Control "public" always;
        }
    }

    # Try to serve file directly, fallback to rewrite.
    location / {
        try_files $uri @rewriteapp;
    }

    # Rewrite all to index.php. This will trigger next location.
    location @rewriteapp {
        rewrite ^(.*)$ /index.php/$1 last;
    }

    # Redirect everything to php image
    location ~ ^/index\.php(/|$) {
        include fastcgi_params;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # try_files resets $fastcgi_path_info, see http://trac.nginx.org/nginx/ticket/321, so we use the if instead
        fastcgi_param PATH_INFO $fastcgi_path_info if_not_empty;

        if (!-f $document_root$fastcgi_script_name) {
            # check if the script exists
            # otherwise, /foo.jpg/bar.php would get passed to FPM, which wouldn't run it as it's not in the list of allowed extensions, but this check is a good idea anyway, just in case
            return 404;
        }

        fastcgi_pass php:9000;
    }

    # Return 404 for all other php files not matching the front controller.
    # This prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}
